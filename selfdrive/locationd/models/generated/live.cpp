#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1858514917797787888) {
   out_1858514917797787888[0] = 0;
   out_1858514917797787888[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1858514917797787888[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1858514917797787888[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1858514917797787888[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1858514917797787888[5] = -sin(in_vec[1]);
   out_1858514917797787888[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1858514917797787888[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1858514917797787888[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1858514917797787888[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1858514917797787888[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1858514917797787888[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1858514917797787888[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1858514917797787888[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1858514917797787888[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1858514917797787888[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1858514917797787888[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1858514917797787888[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4875484729766190714) {
   out_4875484729766190714[0] = delta_x[0] + nom_x[0];
   out_4875484729766190714[1] = delta_x[1] + nom_x[1];
   out_4875484729766190714[2] = delta_x[2] + nom_x[2];
   out_4875484729766190714[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4875484729766190714[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4875484729766190714[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4875484729766190714[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4875484729766190714[7] = delta_x[6] + nom_x[7];
   out_4875484729766190714[8] = delta_x[7] + nom_x[8];
   out_4875484729766190714[9] = delta_x[8] + nom_x[9];
   out_4875484729766190714[10] = delta_x[9] + nom_x[10];
   out_4875484729766190714[11] = delta_x[10] + nom_x[11];
   out_4875484729766190714[12] = delta_x[11] + nom_x[12];
   out_4875484729766190714[13] = delta_x[12] + nom_x[13];
   out_4875484729766190714[14] = delta_x[13] + nom_x[14];
   out_4875484729766190714[15] = delta_x[14] + nom_x[15];
   out_4875484729766190714[16] = delta_x[15] + nom_x[16];
   out_4875484729766190714[17] = delta_x[16] + nom_x[17];
   out_4875484729766190714[18] = delta_x[17] + nom_x[18];
   out_4875484729766190714[19] = delta_x[18] + nom_x[19];
   out_4875484729766190714[20] = delta_x[19] + nom_x[20];
   out_4875484729766190714[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_179592295699275847) {
   out_179592295699275847[0] = -nom_x[0] + true_x[0];
   out_179592295699275847[1] = -nom_x[1] + true_x[1];
   out_179592295699275847[2] = -nom_x[2] + true_x[2];
   out_179592295699275847[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_179592295699275847[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_179592295699275847[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_179592295699275847[6] = -nom_x[7] + true_x[7];
   out_179592295699275847[7] = -nom_x[8] + true_x[8];
   out_179592295699275847[8] = -nom_x[9] + true_x[9];
   out_179592295699275847[9] = -nom_x[10] + true_x[10];
   out_179592295699275847[10] = -nom_x[11] + true_x[11];
   out_179592295699275847[11] = -nom_x[12] + true_x[12];
   out_179592295699275847[12] = -nom_x[13] + true_x[13];
   out_179592295699275847[13] = -nom_x[14] + true_x[14];
   out_179592295699275847[14] = -nom_x[15] + true_x[15];
   out_179592295699275847[15] = -nom_x[16] + true_x[16];
   out_179592295699275847[16] = -nom_x[17] + true_x[17];
   out_179592295699275847[17] = -nom_x[18] + true_x[18];
   out_179592295699275847[18] = -nom_x[19] + true_x[19];
   out_179592295699275847[19] = -nom_x[20] + true_x[20];
   out_179592295699275847[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2512967513516333080) {
   out_2512967513516333080[0] = 1.0;
   out_2512967513516333080[1] = 0;
   out_2512967513516333080[2] = 0;
   out_2512967513516333080[3] = 0;
   out_2512967513516333080[4] = 0;
   out_2512967513516333080[5] = 0;
   out_2512967513516333080[6] = 0;
   out_2512967513516333080[7] = 0;
   out_2512967513516333080[8] = 0;
   out_2512967513516333080[9] = 0;
   out_2512967513516333080[10] = 0;
   out_2512967513516333080[11] = 0;
   out_2512967513516333080[12] = 0;
   out_2512967513516333080[13] = 0;
   out_2512967513516333080[14] = 0;
   out_2512967513516333080[15] = 0;
   out_2512967513516333080[16] = 0;
   out_2512967513516333080[17] = 0;
   out_2512967513516333080[18] = 0;
   out_2512967513516333080[19] = 0;
   out_2512967513516333080[20] = 0;
   out_2512967513516333080[21] = 0;
   out_2512967513516333080[22] = 1.0;
   out_2512967513516333080[23] = 0;
   out_2512967513516333080[24] = 0;
   out_2512967513516333080[25] = 0;
   out_2512967513516333080[26] = 0;
   out_2512967513516333080[27] = 0;
   out_2512967513516333080[28] = 0;
   out_2512967513516333080[29] = 0;
   out_2512967513516333080[30] = 0;
   out_2512967513516333080[31] = 0;
   out_2512967513516333080[32] = 0;
   out_2512967513516333080[33] = 0;
   out_2512967513516333080[34] = 0;
   out_2512967513516333080[35] = 0;
   out_2512967513516333080[36] = 0;
   out_2512967513516333080[37] = 0;
   out_2512967513516333080[38] = 0;
   out_2512967513516333080[39] = 0;
   out_2512967513516333080[40] = 0;
   out_2512967513516333080[41] = 0;
   out_2512967513516333080[42] = 0;
   out_2512967513516333080[43] = 0;
   out_2512967513516333080[44] = 1.0;
   out_2512967513516333080[45] = 0;
   out_2512967513516333080[46] = 0;
   out_2512967513516333080[47] = 0;
   out_2512967513516333080[48] = 0;
   out_2512967513516333080[49] = 0;
   out_2512967513516333080[50] = 0;
   out_2512967513516333080[51] = 0;
   out_2512967513516333080[52] = 0;
   out_2512967513516333080[53] = 0;
   out_2512967513516333080[54] = 0;
   out_2512967513516333080[55] = 0;
   out_2512967513516333080[56] = 0;
   out_2512967513516333080[57] = 0;
   out_2512967513516333080[58] = 0;
   out_2512967513516333080[59] = 0;
   out_2512967513516333080[60] = 0;
   out_2512967513516333080[61] = 0;
   out_2512967513516333080[62] = 0;
   out_2512967513516333080[63] = 0;
   out_2512967513516333080[64] = 0;
   out_2512967513516333080[65] = 0;
   out_2512967513516333080[66] = -0.5*state[4];
   out_2512967513516333080[67] = -0.5*state[5];
   out_2512967513516333080[68] = -0.5*state[6];
   out_2512967513516333080[69] = 0;
   out_2512967513516333080[70] = 0;
   out_2512967513516333080[71] = 0;
   out_2512967513516333080[72] = 0;
   out_2512967513516333080[73] = 0;
   out_2512967513516333080[74] = 0;
   out_2512967513516333080[75] = 0;
   out_2512967513516333080[76] = 0;
   out_2512967513516333080[77] = 0;
   out_2512967513516333080[78] = 0;
   out_2512967513516333080[79] = 0;
   out_2512967513516333080[80] = 0;
   out_2512967513516333080[81] = 0;
   out_2512967513516333080[82] = 0;
   out_2512967513516333080[83] = 0;
   out_2512967513516333080[84] = 0;
   out_2512967513516333080[85] = 0;
   out_2512967513516333080[86] = 0;
   out_2512967513516333080[87] = 0.5*state[3];
   out_2512967513516333080[88] = 0.5*state[6];
   out_2512967513516333080[89] = -0.5*state[5];
   out_2512967513516333080[90] = 0;
   out_2512967513516333080[91] = 0;
   out_2512967513516333080[92] = 0;
   out_2512967513516333080[93] = 0;
   out_2512967513516333080[94] = 0;
   out_2512967513516333080[95] = 0;
   out_2512967513516333080[96] = 0;
   out_2512967513516333080[97] = 0;
   out_2512967513516333080[98] = 0;
   out_2512967513516333080[99] = 0;
   out_2512967513516333080[100] = 0;
   out_2512967513516333080[101] = 0;
   out_2512967513516333080[102] = 0;
   out_2512967513516333080[103] = 0;
   out_2512967513516333080[104] = 0;
   out_2512967513516333080[105] = 0;
   out_2512967513516333080[106] = 0;
   out_2512967513516333080[107] = 0;
   out_2512967513516333080[108] = -0.5*state[6];
   out_2512967513516333080[109] = 0.5*state[3];
   out_2512967513516333080[110] = 0.5*state[4];
   out_2512967513516333080[111] = 0;
   out_2512967513516333080[112] = 0;
   out_2512967513516333080[113] = 0;
   out_2512967513516333080[114] = 0;
   out_2512967513516333080[115] = 0;
   out_2512967513516333080[116] = 0;
   out_2512967513516333080[117] = 0;
   out_2512967513516333080[118] = 0;
   out_2512967513516333080[119] = 0;
   out_2512967513516333080[120] = 0;
   out_2512967513516333080[121] = 0;
   out_2512967513516333080[122] = 0;
   out_2512967513516333080[123] = 0;
   out_2512967513516333080[124] = 0;
   out_2512967513516333080[125] = 0;
   out_2512967513516333080[126] = 0;
   out_2512967513516333080[127] = 0;
   out_2512967513516333080[128] = 0;
   out_2512967513516333080[129] = 0.5*state[5];
   out_2512967513516333080[130] = -0.5*state[4];
   out_2512967513516333080[131] = 0.5*state[3];
   out_2512967513516333080[132] = 0;
   out_2512967513516333080[133] = 0;
   out_2512967513516333080[134] = 0;
   out_2512967513516333080[135] = 0;
   out_2512967513516333080[136] = 0;
   out_2512967513516333080[137] = 0;
   out_2512967513516333080[138] = 0;
   out_2512967513516333080[139] = 0;
   out_2512967513516333080[140] = 0;
   out_2512967513516333080[141] = 0;
   out_2512967513516333080[142] = 0;
   out_2512967513516333080[143] = 0;
   out_2512967513516333080[144] = 0;
   out_2512967513516333080[145] = 0;
   out_2512967513516333080[146] = 0;
   out_2512967513516333080[147] = 0;
   out_2512967513516333080[148] = 0;
   out_2512967513516333080[149] = 0;
   out_2512967513516333080[150] = 0;
   out_2512967513516333080[151] = 0;
   out_2512967513516333080[152] = 0;
   out_2512967513516333080[153] = 1.0;
   out_2512967513516333080[154] = 0;
   out_2512967513516333080[155] = 0;
   out_2512967513516333080[156] = 0;
   out_2512967513516333080[157] = 0;
   out_2512967513516333080[158] = 0;
   out_2512967513516333080[159] = 0;
   out_2512967513516333080[160] = 0;
   out_2512967513516333080[161] = 0;
   out_2512967513516333080[162] = 0;
   out_2512967513516333080[163] = 0;
   out_2512967513516333080[164] = 0;
   out_2512967513516333080[165] = 0;
   out_2512967513516333080[166] = 0;
   out_2512967513516333080[167] = 0;
   out_2512967513516333080[168] = 0;
   out_2512967513516333080[169] = 0;
   out_2512967513516333080[170] = 0;
   out_2512967513516333080[171] = 0;
   out_2512967513516333080[172] = 0;
   out_2512967513516333080[173] = 0;
   out_2512967513516333080[174] = 0;
   out_2512967513516333080[175] = 1.0;
   out_2512967513516333080[176] = 0;
   out_2512967513516333080[177] = 0;
   out_2512967513516333080[178] = 0;
   out_2512967513516333080[179] = 0;
   out_2512967513516333080[180] = 0;
   out_2512967513516333080[181] = 0;
   out_2512967513516333080[182] = 0;
   out_2512967513516333080[183] = 0;
   out_2512967513516333080[184] = 0;
   out_2512967513516333080[185] = 0;
   out_2512967513516333080[186] = 0;
   out_2512967513516333080[187] = 0;
   out_2512967513516333080[188] = 0;
   out_2512967513516333080[189] = 0;
   out_2512967513516333080[190] = 0;
   out_2512967513516333080[191] = 0;
   out_2512967513516333080[192] = 0;
   out_2512967513516333080[193] = 0;
   out_2512967513516333080[194] = 0;
   out_2512967513516333080[195] = 0;
   out_2512967513516333080[196] = 0;
   out_2512967513516333080[197] = 1.0;
   out_2512967513516333080[198] = 0;
   out_2512967513516333080[199] = 0;
   out_2512967513516333080[200] = 0;
   out_2512967513516333080[201] = 0;
   out_2512967513516333080[202] = 0;
   out_2512967513516333080[203] = 0;
   out_2512967513516333080[204] = 0;
   out_2512967513516333080[205] = 0;
   out_2512967513516333080[206] = 0;
   out_2512967513516333080[207] = 0;
   out_2512967513516333080[208] = 0;
   out_2512967513516333080[209] = 0;
   out_2512967513516333080[210] = 0;
   out_2512967513516333080[211] = 0;
   out_2512967513516333080[212] = 0;
   out_2512967513516333080[213] = 0;
   out_2512967513516333080[214] = 0;
   out_2512967513516333080[215] = 0;
   out_2512967513516333080[216] = 0;
   out_2512967513516333080[217] = 0;
   out_2512967513516333080[218] = 0;
   out_2512967513516333080[219] = 1.0;
   out_2512967513516333080[220] = 0;
   out_2512967513516333080[221] = 0;
   out_2512967513516333080[222] = 0;
   out_2512967513516333080[223] = 0;
   out_2512967513516333080[224] = 0;
   out_2512967513516333080[225] = 0;
   out_2512967513516333080[226] = 0;
   out_2512967513516333080[227] = 0;
   out_2512967513516333080[228] = 0;
   out_2512967513516333080[229] = 0;
   out_2512967513516333080[230] = 0;
   out_2512967513516333080[231] = 0;
   out_2512967513516333080[232] = 0;
   out_2512967513516333080[233] = 0;
   out_2512967513516333080[234] = 0;
   out_2512967513516333080[235] = 0;
   out_2512967513516333080[236] = 0;
   out_2512967513516333080[237] = 0;
   out_2512967513516333080[238] = 0;
   out_2512967513516333080[239] = 0;
   out_2512967513516333080[240] = 0;
   out_2512967513516333080[241] = 1.0;
   out_2512967513516333080[242] = 0;
   out_2512967513516333080[243] = 0;
   out_2512967513516333080[244] = 0;
   out_2512967513516333080[245] = 0;
   out_2512967513516333080[246] = 0;
   out_2512967513516333080[247] = 0;
   out_2512967513516333080[248] = 0;
   out_2512967513516333080[249] = 0;
   out_2512967513516333080[250] = 0;
   out_2512967513516333080[251] = 0;
   out_2512967513516333080[252] = 0;
   out_2512967513516333080[253] = 0;
   out_2512967513516333080[254] = 0;
   out_2512967513516333080[255] = 0;
   out_2512967513516333080[256] = 0;
   out_2512967513516333080[257] = 0;
   out_2512967513516333080[258] = 0;
   out_2512967513516333080[259] = 0;
   out_2512967513516333080[260] = 0;
   out_2512967513516333080[261] = 0;
   out_2512967513516333080[262] = 0;
   out_2512967513516333080[263] = 1.0;
   out_2512967513516333080[264] = 0;
   out_2512967513516333080[265] = 0;
   out_2512967513516333080[266] = 0;
   out_2512967513516333080[267] = 0;
   out_2512967513516333080[268] = 0;
   out_2512967513516333080[269] = 0;
   out_2512967513516333080[270] = 0;
   out_2512967513516333080[271] = 0;
   out_2512967513516333080[272] = 0;
   out_2512967513516333080[273] = 0;
   out_2512967513516333080[274] = 0;
   out_2512967513516333080[275] = 0;
   out_2512967513516333080[276] = 0;
   out_2512967513516333080[277] = 0;
   out_2512967513516333080[278] = 0;
   out_2512967513516333080[279] = 0;
   out_2512967513516333080[280] = 0;
   out_2512967513516333080[281] = 0;
   out_2512967513516333080[282] = 0;
   out_2512967513516333080[283] = 0;
   out_2512967513516333080[284] = 0;
   out_2512967513516333080[285] = 1.0;
   out_2512967513516333080[286] = 0;
   out_2512967513516333080[287] = 0;
   out_2512967513516333080[288] = 0;
   out_2512967513516333080[289] = 0;
   out_2512967513516333080[290] = 0;
   out_2512967513516333080[291] = 0;
   out_2512967513516333080[292] = 0;
   out_2512967513516333080[293] = 0;
   out_2512967513516333080[294] = 0;
   out_2512967513516333080[295] = 0;
   out_2512967513516333080[296] = 0;
   out_2512967513516333080[297] = 0;
   out_2512967513516333080[298] = 0;
   out_2512967513516333080[299] = 0;
   out_2512967513516333080[300] = 0;
   out_2512967513516333080[301] = 0;
   out_2512967513516333080[302] = 0;
   out_2512967513516333080[303] = 0;
   out_2512967513516333080[304] = 0;
   out_2512967513516333080[305] = 0;
   out_2512967513516333080[306] = 0;
   out_2512967513516333080[307] = 1.0;
   out_2512967513516333080[308] = 0;
   out_2512967513516333080[309] = 0;
   out_2512967513516333080[310] = 0;
   out_2512967513516333080[311] = 0;
   out_2512967513516333080[312] = 0;
   out_2512967513516333080[313] = 0;
   out_2512967513516333080[314] = 0;
   out_2512967513516333080[315] = 0;
   out_2512967513516333080[316] = 0;
   out_2512967513516333080[317] = 0;
   out_2512967513516333080[318] = 0;
   out_2512967513516333080[319] = 0;
   out_2512967513516333080[320] = 0;
   out_2512967513516333080[321] = 0;
   out_2512967513516333080[322] = 0;
   out_2512967513516333080[323] = 0;
   out_2512967513516333080[324] = 0;
   out_2512967513516333080[325] = 0;
   out_2512967513516333080[326] = 0;
   out_2512967513516333080[327] = 0;
   out_2512967513516333080[328] = 0;
   out_2512967513516333080[329] = 1.0;
   out_2512967513516333080[330] = 0;
   out_2512967513516333080[331] = 0;
   out_2512967513516333080[332] = 0;
   out_2512967513516333080[333] = 0;
   out_2512967513516333080[334] = 0;
   out_2512967513516333080[335] = 0;
   out_2512967513516333080[336] = 0;
   out_2512967513516333080[337] = 0;
   out_2512967513516333080[338] = 0;
   out_2512967513516333080[339] = 0;
   out_2512967513516333080[340] = 0;
   out_2512967513516333080[341] = 0;
   out_2512967513516333080[342] = 0;
   out_2512967513516333080[343] = 0;
   out_2512967513516333080[344] = 0;
   out_2512967513516333080[345] = 0;
   out_2512967513516333080[346] = 0;
   out_2512967513516333080[347] = 0;
   out_2512967513516333080[348] = 0;
   out_2512967513516333080[349] = 0;
   out_2512967513516333080[350] = 0;
   out_2512967513516333080[351] = 1.0;
   out_2512967513516333080[352] = 0;
   out_2512967513516333080[353] = 0;
   out_2512967513516333080[354] = 0;
   out_2512967513516333080[355] = 0;
   out_2512967513516333080[356] = 0;
   out_2512967513516333080[357] = 0;
   out_2512967513516333080[358] = 0;
   out_2512967513516333080[359] = 0;
   out_2512967513516333080[360] = 0;
   out_2512967513516333080[361] = 0;
   out_2512967513516333080[362] = 0;
   out_2512967513516333080[363] = 0;
   out_2512967513516333080[364] = 0;
   out_2512967513516333080[365] = 0;
   out_2512967513516333080[366] = 0;
   out_2512967513516333080[367] = 0;
   out_2512967513516333080[368] = 0;
   out_2512967513516333080[369] = 0;
   out_2512967513516333080[370] = 0;
   out_2512967513516333080[371] = 0;
   out_2512967513516333080[372] = 0;
   out_2512967513516333080[373] = 1.0;
   out_2512967513516333080[374] = 0;
   out_2512967513516333080[375] = 0;
   out_2512967513516333080[376] = 0;
   out_2512967513516333080[377] = 0;
   out_2512967513516333080[378] = 0;
   out_2512967513516333080[379] = 0;
   out_2512967513516333080[380] = 0;
   out_2512967513516333080[381] = 0;
   out_2512967513516333080[382] = 0;
   out_2512967513516333080[383] = 0;
   out_2512967513516333080[384] = 0;
   out_2512967513516333080[385] = 0;
   out_2512967513516333080[386] = 0;
   out_2512967513516333080[387] = 0;
   out_2512967513516333080[388] = 0;
   out_2512967513516333080[389] = 0;
   out_2512967513516333080[390] = 0;
   out_2512967513516333080[391] = 0;
   out_2512967513516333080[392] = 0;
   out_2512967513516333080[393] = 0;
   out_2512967513516333080[394] = 0;
   out_2512967513516333080[395] = 1.0;
   out_2512967513516333080[396] = 0;
   out_2512967513516333080[397] = 0;
   out_2512967513516333080[398] = 0;
   out_2512967513516333080[399] = 0;
   out_2512967513516333080[400] = 0;
   out_2512967513516333080[401] = 0;
   out_2512967513516333080[402] = 0;
   out_2512967513516333080[403] = 0;
   out_2512967513516333080[404] = 0;
   out_2512967513516333080[405] = 0;
   out_2512967513516333080[406] = 0;
   out_2512967513516333080[407] = 0;
   out_2512967513516333080[408] = 0;
   out_2512967513516333080[409] = 0;
   out_2512967513516333080[410] = 0;
   out_2512967513516333080[411] = 0;
   out_2512967513516333080[412] = 0;
   out_2512967513516333080[413] = 0;
   out_2512967513516333080[414] = 0;
   out_2512967513516333080[415] = 0;
   out_2512967513516333080[416] = 0;
   out_2512967513516333080[417] = 1.0;
   out_2512967513516333080[418] = 0;
   out_2512967513516333080[419] = 0;
   out_2512967513516333080[420] = 0;
   out_2512967513516333080[421] = 0;
   out_2512967513516333080[422] = 0;
   out_2512967513516333080[423] = 0;
   out_2512967513516333080[424] = 0;
   out_2512967513516333080[425] = 0;
   out_2512967513516333080[426] = 0;
   out_2512967513516333080[427] = 0;
   out_2512967513516333080[428] = 0;
   out_2512967513516333080[429] = 0;
   out_2512967513516333080[430] = 0;
   out_2512967513516333080[431] = 0;
   out_2512967513516333080[432] = 0;
   out_2512967513516333080[433] = 0;
   out_2512967513516333080[434] = 0;
   out_2512967513516333080[435] = 0;
   out_2512967513516333080[436] = 0;
   out_2512967513516333080[437] = 0;
   out_2512967513516333080[438] = 0;
   out_2512967513516333080[439] = 1.0;
   out_2512967513516333080[440] = 0;
   out_2512967513516333080[441] = 0;
   out_2512967513516333080[442] = 0;
   out_2512967513516333080[443] = 0;
   out_2512967513516333080[444] = 0;
   out_2512967513516333080[445] = 0;
   out_2512967513516333080[446] = 0;
   out_2512967513516333080[447] = 0;
   out_2512967513516333080[448] = 0;
   out_2512967513516333080[449] = 0;
   out_2512967513516333080[450] = 0;
   out_2512967513516333080[451] = 0;
   out_2512967513516333080[452] = 0;
   out_2512967513516333080[453] = 0;
   out_2512967513516333080[454] = 0;
   out_2512967513516333080[455] = 0;
   out_2512967513516333080[456] = 0;
   out_2512967513516333080[457] = 0;
   out_2512967513516333080[458] = 0;
   out_2512967513516333080[459] = 0;
   out_2512967513516333080[460] = 0;
   out_2512967513516333080[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8075543098903494570) {
   out_8075543098903494570[0] = dt*state[7] + state[0];
   out_8075543098903494570[1] = dt*state[8] + state[1];
   out_8075543098903494570[2] = dt*state[9] + state[2];
   out_8075543098903494570[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8075543098903494570[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8075543098903494570[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8075543098903494570[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8075543098903494570[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8075543098903494570[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8075543098903494570[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8075543098903494570[10] = state[10];
   out_8075543098903494570[11] = state[11];
   out_8075543098903494570[12] = state[12];
   out_8075543098903494570[13] = state[13];
   out_8075543098903494570[14] = state[14];
   out_8075543098903494570[15] = state[15];
   out_8075543098903494570[16] = state[16];
   out_8075543098903494570[17] = state[17];
   out_8075543098903494570[18] = state[18];
   out_8075543098903494570[19] = state[19];
   out_8075543098903494570[20] = state[20];
   out_8075543098903494570[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8357313174235544082) {
   out_8357313174235544082[0] = 1;
   out_8357313174235544082[1] = 0;
   out_8357313174235544082[2] = 0;
   out_8357313174235544082[3] = 0;
   out_8357313174235544082[4] = 0;
   out_8357313174235544082[5] = 0;
   out_8357313174235544082[6] = dt;
   out_8357313174235544082[7] = 0;
   out_8357313174235544082[8] = 0;
   out_8357313174235544082[9] = 0;
   out_8357313174235544082[10] = 0;
   out_8357313174235544082[11] = 0;
   out_8357313174235544082[12] = 0;
   out_8357313174235544082[13] = 0;
   out_8357313174235544082[14] = 0;
   out_8357313174235544082[15] = 0;
   out_8357313174235544082[16] = 0;
   out_8357313174235544082[17] = 0;
   out_8357313174235544082[18] = 0;
   out_8357313174235544082[19] = 0;
   out_8357313174235544082[20] = 0;
   out_8357313174235544082[21] = 0;
   out_8357313174235544082[22] = 1;
   out_8357313174235544082[23] = 0;
   out_8357313174235544082[24] = 0;
   out_8357313174235544082[25] = 0;
   out_8357313174235544082[26] = 0;
   out_8357313174235544082[27] = 0;
   out_8357313174235544082[28] = dt;
   out_8357313174235544082[29] = 0;
   out_8357313174235544082[30] = 0;
   out_8357313174235544082[31] = 0;
   out_8357313174235544082[32] = 0;
   out_8357313174235544082[33] = 0;
   out_8357313174235544082[34] = 0;
   out_8357313174235544082[35] = 0;
   out_8357313174235544082[36] = 0;
   out_8357313174235544082[37] = 0;
   out_8357313174235544082[38] = 0;
   out_8357313174235544082[39] = 0;
   out_8357313174235544082[40] = 0;
   out_8357313174235544082[41] = 0;
   out_8357313174235544082[42] = 0;
   out_8357313174235544082[43] = 0;
   out_8357313174235544082[44] = 1;
   out_8357313174235544082[45] = 0;
   out_8357313174235544082[46] = 0;
   out_8357313174235544082[47] = 0;
   out_8357313174235544082[48] = 0;
   out_8357313174235544082[49] = 0;
   out_8357313174235544082[50] = dt;
   out_8357313174235544082[51] = 0;
   out_8357313174235544082[52] = 0;
   out_8357313174235544082[53] = 0;
   out_8357313174235544082[54] = 0;
   out_8357313174235544082[55] = 0;
   out_8357313174235544082[56] = 0;
   out_8357313174235544082[57] = 0;
   out_8357313174235544082[58] = 0;
   out_8357313174235544082[59] = 0;
   out_8357313174235544082[60] = 0;
   out_8357313174235544082[61] = 0;
   out_8357313174235544082[62] = 0;
   out_8357313174235544082[63] = 0;
   out_8357313174235544082[64] = 0;
   out_8357313174235544082[65] = 0;
   out_8357313174235544082[66] = 1;
   out_8357313174235544082[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8357313174235544082[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8357313174235544082[69] = 0;
   out_8357313174235544082[70] = 0;
   out_8357313174235544082[71] = 0;
   out_8357313174235544082[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8357313174235544082[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8357313174235544082[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8357313174235544082[75] = 0;
   out_8357313174235544082[76] = 0;
   out_8357313174235544082[77] = 0;
   out_8357313174235544082[78] = 0;
   out_8357313174235544082[79] = 0;
   out_8357313174235544082[80] = 0;
   out_8357313174235544082[81] = 0;
   out_8357313174235544082[82] = 0;
   out_8357313174235544082[83] = 0;
   out_8357313174235544082[84] = 0;
   out_8357313174235544082[85] = 0;
   out_8357313174235544082[86] = 0;
   out_8357313174235544082[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8357313174235544082[88] = 1;
   out_8357313174235544082[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8357313174235544082[90] = 0;
   out_8357313174235544082[91] = 0;
   out_8357313174235544082[92] = 0;
   out_8357313174235544082[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8357313174235544082[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8357313174235544082[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8357313174235544082[96] = 0;
   out_8357313174235544082[97] = 0;
   out_8357313174235544082[98] = 0;
   out_8357313174235544082[99] = 0;
   out_8357313174235544082[100] = 0;
   out_8357313174235544082[101] = 0;
   out_8357313174235544082[102] = 0;
   out_8357313174235544082[103] = 0;
   out_8357313174235544082[104] = 0;
   out_8357313174235544082[105] = 0;
   out_8357313174235544082[106] = 0;
   out_8357313174235544082[107] = 0;
   out_8357313174235544082[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8357313174235544082[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8357313174235544082[110] = 1;
   out_8357313174235544082[111] = 0;
   out_8357313174235544082[112] = 0;
   out_8357313174235544082[113] = 0;
   out_8357313174235544082[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8357313174235544082[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8357313174235544082[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8357313174235544082[117] = 0;
   out_8357313174235544082[118] = 0;
   out_8357313174235544082[119] = 0;
   out_8357313174235544082[120] = 0;
   out_8357313174235544082[121] = 0;
   out_8357313174235544082[122] = 0;
   out_8357313174235544082[123] = 0;
   out_8357313174235544082[124] = 0;
   out_8357313174235544082[125] = 0;
   out_8357313174235544082[126] = 0;
   out_8357313174235544082[127] = 0;
   out_8357313174235544082[128] = 0;
   out_8357313174235544082[129] = 0;
   out_8357313174235544082[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8357313174235544082[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8357313174235544082[132] = 1;
   out_8357313174235544082[133] = 0;
   out_8357313174235544082[134] = 0;
   out_8357313174235544082[135] = 0;
   out_8357313174235544082[136] = 0;
   out_8357313174235544082[137] = 0;
   out_8357313174235544082[138] = 0;
   out_8357313174235544082[139] = 0;
   out_8357313174235544082[140] = 0;
   out_8357313174235544082[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8357313174235544082[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8357313174235544082[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8357313174235544082[144] = 0;
   out_8357313174235544082[145] = 0;
   out_8357313174235544082[146] = 0;
   out_8357313174235544082[147] = 0;
   out_8357313174235544082[148] = 0;
   out_8357313174235544082[149] = 0;
   out_8357313174235544082[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8357313174235544082[151] = 0;
   out_8357313174235544082[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8357313174235544082[153] = 0;
   out_8357313174235544082[154] = 1;
   out_8357313174235544082[155] = 0;
   out_8357313174235544082[156] = 0;
   out_8357313174235544082[157] = 0;
   out_8357313174235544082[158] = 0;
   out_8357313174235544082[159] = 0;
   out_8357313174235544082[160] = 0;
   out_8357313174235544082[161] = 0;
   out_8357313174235544082[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8357313174235544082[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8357313174235544082[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8357313174235544082[165] = 0;
   out_8357313174235544082[166] = 0;
   out_8357313174235544082[167] = 0;
   out_8357313174235544082[168] = 0;
   out_8357313174235544082[169] = 0;
   out_8357313174235544082[170] = 0;
   out_8357313174235544082[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8357313174235544082[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8357313174235544082[173] = 0;
   out_8357313174235544082[174] = 0;
   out_8357313174235544082[175] = 0;
   out_8357313174235544082[176] = 1;
   out_8357313174235544082[177] = 0;
   out_8357313174235544082[178] = 0;
   out_8357313174235544082[179] = 0;
   out_8357313174235544082[180] = 0;
   out_8357313174235544082[181] = 0;
   out_8357313174235544082[182] = 0;
   out_8357313174235544082[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8357313174235544082[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8357313174235544082[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8357313174235544082[186] = 0;
   out_8357313174235544082[187] = 0;
   out_8357313174235544082[188] = 0;
   out_8357313174235544082[189] = 0;
   out_8357313174235544082[190] = 0;
   out_8357313174235544082[191] = 0;
   out_8357313174235544082[192] = 0;
   out_8357313174235544082[193] = 0;
   out_8357313174235544082[194] = 0;
   out_8357313174235544082[195] = 0;
   out_8357313174235544082[196] = 0;
   out_8357313174235544082[197] = 0;
   out_8357313174235544082[198] = 1;
   out_8357313174235544082[199] = 0;
   out_8357313174235544082[200] = 0;
   out_8357313174235544082[201] = 0;
   out_8357313174235544082[202] = 0;
   out_8357313174235544082[203] = 0;
   out_8357313174235544082[204] = 0;
   out_8357313174235544082[205] = 0;
   out_8357313174235544082[206] = 0;
   out_8357313174235544082[207] = 0;
   out_8357313174235544082[208] = 0;
   out_8357313174235544082[209] = 0;
   out_8357313174235544082[210] = 0;
   out_8357313174235544082[211] = 0;
   out_8357313174235544082[212] = 0;
   out_8357313174235544082[213] = 0;
   out_8357313174235544082[214] = 0;
   out_8357313174235544082[215] = 0;
   out_8357313174235544082[216] = 0;
   out_8357313174235544082[217] = 0;
   out_8357313174235544082[218] = 0;
   out_8357313174235544082[219] = 0;
   out_8357313174235544082[220] = 1;
   out_8357313174235544082[221] = 0;
   out_8357313174235544082[222] = 0;
   out_8357313174235544082[223] = 0;
   out_8357313174235544082[224] = 0;
   out_8357313174235544082[225] = 0;
   out_8357313174235544082[226] = 0;
   out_8357313174235544082[227] = 0;
   out_8357313174235544082[228] = 0;
   out_8357313174235544082[229] = 0;
   out_8357313174235544082[230] = 0;
   out_8357313174235544082[231] = 0;
   out_8357313174235544082[232] = 0;
   out_8357313174235544082[233] = 0;
   out_8357313174235544082[234] = 0;
   out_8357313174235544082[235] = 0;
   out_8357313174235544082[236] = 0;
   out_8357313174235544082[237] = 0;
   out_8357313174235544082[238] = 0;
   out_8357313174235544082[239] = 0;
   out_8357313174235544082[240] = 0;
   out_8357313174235544082[241] = 0;
   out_8357313174235544082[242] = 1;
   out_8357313174235544082[243] = 0;
   out_8357313174235544082[244] = 0;
   out_8357313174235544082[245] = 0;
   out_8357313174235544082[246] = 0;
   out_8357313174235544082[247] = 0;
   out_8357313174235544082[248] = 0;
   out_8357313174235544082[249] = 0;
   out_8357313174235544082[250] = 0;
   out_8357313174235544082[251] = 0;
   out_8357313174235544082[252] = 0;
   out_8357313174235544082[253] = 0;
   out_8357313174235544082[254] = 0;
   out_8357313174235544082[255] = 0;
   out_8357313174235544082[256] = 0;
   out_8357313174235544082[257] = 0;
   out_8357313174235544082[258] = 0;
   out_8357313174235544082[259] = 0;
   out_8357313174235544082[260] = 0;
   out_8357313174235544082[261] = 0;
   out_8357313174235544082[262] = 0;
   out_8357313174235544082[263] = 0;
   out_8357313174235544082[264] = 1;
   out_8357313174235544082[265] = 0;
   out_8357313174235544082[266] = 0;
   out_8357313174235544082[267] = 0;
   out_8357313174235544082[268] = 0;
   out_8357313174235544082[269] = 0;
   out_8357313174235544082[270] = 0;
   out_8357313174235544082[271] = 0;
   out_8357313174235544082[272] = 0;
   out_8357313174235544082[273] = 0;
   out_8357313174235544082[274] = 0;
   out_8357313174235544082[275] = 0;
   out_8357313174235544082[276] = 0;
   out_8357313174235544082[277] = 0;
   out_8357313174235544082[278] = 0;
   out_8357313174235544082[279] = 0;
   out_8357313174235544082[280] = 0;
   out_8357313174235544082[281] = 0;
   out_8357313174235544082[282] = 0;
   out_8357313174235544082[283] = 0;
   out_8357313174235544082[284] = 0;
   out_8357313174235544082[285] = 0;
   out_8357313174235544082[286] = 1;
   out_8357313174235544082[287] = 0;
   out_8357313174235544082[288] = 0;
   out_8357313174235544082[289] = 0;
   out_8357313174235544082[290] = 0;
   out_8357313174235544082[291] = 0;
   out_8357313174235544082[292] = 0;
   out_8357313174235544082[293] = 0;
   out_8357313174235544082[294] = 0;
   out_8357313174235544082[295] = 0;
   out_8357313174235544082[296] = 0;
   out_8357313174235544082[297] = 0;
   out_8357313174235544082[298] = 0;
   out_8357313174235544082[299] = 0;
   out_8357313174235544082[300] = 0;
   out_8357313174235544082[301] = 0;
   out_8357313174235544082[302] = 0;
   out_8357313174235544082[303] = 0;
   out_8357313174235544082[304] = 0;
   out_8357313174235544082[305] = 0;
   out_8357313174235544082[306] = 0;
   out_8357313174235544082[307] = 0;
   out_8357313174235544082[308] = 1;
   out_8357313174235544082[309] = 0;
   out_8357313174235544082[310] = 0;
   out_8357313174235544082[311] = 0;
   out_8357313174235544082[312] = 0;
   out_8357313174235544082[313] = 0;
   out_8357313174235544082[314] = 0;
   out_8357313174235544082[315] = 0;
   out_8357313174235544082[316] = 0;
   out_8357313174235544082[317] = 0;
   out_8357313174235544082[318] = 0;
   out_8357313174235544082[319] = 0;
   out_8357313174235544082[320] = 0;
   out_8357313174235544082[321] = 0;
   out_8357313174235544082[322] = 0;
   out_8357313174235544082[323] = 0;
   out_8357313174235544082[324] = 0;
   out_8357313174235544082[325] = 0;
   out_8357313174235544082[326] = 0;
   out_8357313174235544082[327] = 0;
   out_8357313174235544082[328] = 0;
   out_8357313174235544082[329] = 0;
   out_8357313174235544082[330] = 1;
   out_8357313174235544082[331] = 0;
   out_8357313174235544082[332] = 0;
   out_8357313174235544082[333] = 0;
   out_8357313174235544082[334] = 0;
   out_8357313174235544082[335] = 0;
   out_8357313174235544082[336] = 0;
   out_8357313174235544082[337] = 0;
   out_8357313174235544082[338] = 0;
   out_8357313174235544082[339] = 0;
   out_8357313174235544082[340] = 0;
   out_8357313174235544082[341] = 0;
   out_8357313174235544082[342] = 0;
   out_8357313174235544082[343] = 0;
   out_8357313174235544082[344] = 0;
   out_8357313174235544082[345] = 0;
   out_8357313174235544082[346] = 0;
   out_8357313174235544082[347] = 0;
   out_8357313174235544082[348] = 0;
   out_8357313174235544082[349] = 0;
   out_8357313174235544082[350] = 0;
   out_8357313174235544082[351] = 0;
   out_8357313174235544082[352] = 1;
   out_8357313174235544082[353] = 0;
   out_8357313174235544082[354] = 0;
   out_8357313174235544082[355] = 0;
   out_8357313174235544082[356] = 0;
   out_8357313174235544082[357] = 0;
   out_8357313174235544082[358] = 0;
   out_8357313174235544082[359] = 0;
   out_8357313174235544082[360] = 0;
   out_8357313174235544082[361] = 0;
   out_8357313174235544082[362] = 0;
   out_8357313174235544082[363] = 0;
   out_8357313174235544082[364] = 0;
   out_8357313174235544082[365] = 0;
   out_8357313174235544082[366] = 0;
   out_8357313174235544082[367] = 0;
   out_8357313174235544082[368] = 0;
   out_8357313174235544082[369] = 0;
   out_8357313174235544082[370] = 0;
   out_8357313174235544082[371] = 0;
   out_8357313174235544082[372] = 0;
   out_8357313174235544082[373] = 0;
   out_8357313174235544082[374] = 1;
   out_8357313174235544082[375] = 0;
   out_8357313174235544082[376] = 0;
   out_8357313174235544082[377] = 0;
   out_8357313174235544082[378] = 0;
   out_8357313174235544082[379] = 0;
   out_8357313174235544082[380] = 0;
   out_8357313174235544082[381] = 0;
   out_8357313174235544082[382] = 0;
   out_8357313174235544082[383] = 0;
   out_8357313174235544082[384] = 0;
   out_8357313174235544082[385] = 0;
   out_8357313174235544082[386] = 0;
   out_8357313174235544082[387] = 0;
   out_8357313174235544082[388] = 0;
   out_8357313174235544082[389] = 0;
   out_8357313174235544082[390] = 0;
   out_8357313174235544082[391] = 0;
   out_8357313174235544082[392] = 0;
   out_8357313174235544082[393] = 0;
   out_8357313174235544082[394] = 0;
   out_8357313174235544082[395] = 0;
   out_8357313174235544082[396] = 1;
   out_8357313174235544082[397] = 0;
   out_8357313174235544082[398] = 0;
   out_8357313174235544082[399] = 0;
   out_8357313174235544082[400] = 0;
   out_8357313174235544082[401] = 0;
   out_8357313174235544082[402] = 0;
   out_8357313174235544082[403] = 0;
   out_8357313174235544082[404] = 0;
   out_8357313174235544082[405] = 0;
   out_8357313174235544082[406] = 0;
   out_8357313174235544082[407] = 0;
   out_8357313174235544082[408] = 0;
   out_8357313174235544082[409] = 0;
   out_8357313174235544082[410] = 0;
   out_8357313174235544082[411] = 0;
   out_8357313174235544082[412] = 0;
   out_8357313174235544082[413] = 0;
   out_8357313174235544082[414] = 0;
   out_8357313174235544082[415] = 0;
   out_8357313174235544082[416] = 0;
   out_8357313174235544082[417] = 0;
   out_8357313174235544082[418] = 1;
   out_8357313174235544082[419] = 0;
   out_8357313174235544082[420] = 0;
   out_8357313174235544082[421] = 0;
   out_8357313174235544082[422] = 0;
   out_8357313174235544082[423] = 0;
   out_8357313174235544082[424] = 0;
   out_8357313174235544082[425] = 0;
   out_8357313174235544082[426] = 0;
   out_8357313174235544082[427] = 0;
   out_8357313174235544082[428] = 0;
   out_8357313174235544082[429] = 0;
   out_8357313174235544082[430] = 0;
   out_8357313174235544082[431] = 0;
   out_8357313174235544082[432] = 0;
   out_8357313174235544082[433] = 0;
   out_8357313174235544082[434] = 0;
   out_8357313174235544082[435] = 0;
   out_8357313174235544082[436] = 0;
   out_8357313174235544082[437] = 0;
   out_8357313174235544082[438] = 0;
   out_8357313174235544082[439] = 0;
   out_8357313174235544082[440] = 1;
}
void h_4(double *state, double *unused, double *out_7334055422967863267) {
   out_7334055422967863267[0] = state[10] + state[13];
   out_7334055422967863267[1] = state[11] + state[14];
   out_7334055422967863267[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6639957704822612649) {
   out_6639957704822612649[0] = 0;
   out_6639957704822612649[1] = 0;
   out_6639957704822612649[2] = 0;
   out_6639957704822612649[3] = 0;
   out_6639957704822612649[4] = 0;
   out_6639957704822612649[5] = 0;
   out_6639957704822612649[6] = 0;
   out_6639957704822612649[7] = 0;
   out_6639957704822612649[8] = 0;
   out_6639957704822612649[9] = 0;
   out_6639957704822612649[10] = 1;
   out_6639957704822612649[11] = 0;
   out_6639957704822612649[12] = 0;
   out_6639957704822612649[13] = 1;
   out_6639957704822612649[14] = 0;
   out_6639957704822612649[15] = 0;
   out_6639957704822612649[16] = 0;
   out_6639957704822612649[17] = 0;
   out_6639957704822612649[18] = 0;
   out_6639957704822612649[19] = 0;
   out_6639957704822612649[20] = 0;
   out_6639957704822612649[21] = 0;
   out_6639957704822612649[22] = 0;
   out_6639957704822612649[23] = 0;
   out_6639957704822612649[24] = 0;
   out_6639957704822612649[25] = 0;
   out_6639957704822612649[26] = 0;
   out_6639957704822612649[27] = 0;
   out_6639957704822612649[28] = 0;
   out_6639957704822612649[29] = 0;
   out_6639957704822612649[30] = 0;
   out_6639957704822612649[31] = 0;
   out_6639957704822612649[32] = 0;
   out_6639957704822612649[33] = 1;
   out_6639957704822612649[34] = 0;
   out_6639957704822612649[35] = 0;
   out_6639957704822612649[36] = 1;
   out_6639957704822612649[37] = 0;
   out_6639957704822612649[38] = 0;
   out_6639957704822612649[39] = 0;
   out_6639957704822612649[40] = 0;
   out_6639957704822612649[41] = 0;
   out_6639957704822612649[42] = 0;
   out_6639957704822612649[43] = 0;
   out_6639957704822612649[44] = 0;
   out_6639957704822612649[45] = 0;
   out_6639957704822612649[46] = 0;
   out_6639957704822612649[47] = 0;
   out_6639957704822612649[48] = 0;
   out_6639957704822612649[49] = 0;
   out_6639957704822612649[50] = 0;
   out_6639957704822612649[51] = 0;
   out_6639957704822612649[52] = 0;
   out_6639957704822612649[53] = 0;
   out_6639957704822612649[54] = 0;
   out_6639957704822612649[55] = 0;
   out_6639957704822612649[56] = 1;
   out_6639957704822612649[57] = 0;
   out_6639957704822612649[58] = 0;
   out_6639957704822612649[59] = 1;
   out_6639957704822612649[60] = 0;
   out_6639957704822612649[61] = 0;
   out_6639957704822612649[62] = 0;
   out_6639957704822612649[63] = 0;
   out_6639957704822612649[64] = 0;
   out_6639957704822612649[65] = 0;
}
void h_9(double *state, double *unused, double *out_3520759080716796977) {
   out_3520759080716796977[0] = state[10];
   out_3520759080716796977[1] = state[11];
   out_3520759080716796977[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6398768058193022004) {
   out_6398768058193022004[0] = 0;
   out_6398768058193022004[1] = 0;
   out_6398768058193022004[2] = 0;
   out_6398768058193022004[3] = 0;
   out_6398768058193022004[4] = 0;
   out_6398768058193022004[5] = 0;
   out_6398768058193022004[6] = 0;
   out_6398768058193022004[7] = 0;
   out_6398768058193022004[8] = 0;
   out_6398768058193022004[9] = 0;
   out_6398768058193022004[10] = 1;
   out_6398768058193022004[11] = 0;
   out_6398768058193022004[12] = 0;
   out_6398768058193022004[13] = 0;
   out_6398768058193022004[14] = 0;
   out_6398768058193022004[15] = 0;
   out_6398768058193022004[16] = 0;
   out_6398768058193022004[17] = 0;
   out_6398768058193022004[18] = 0;
   out_6398768058193022004[19] = 0;
   out_6398768058193022004[20] = 0;
   out_6398768058193022004[21] = 0;
   out_6398768058193022004[22] = 0;
   out_6398768058193022004[23] = 0;
   out_6398768058193022004[24] = 0;
   out_6398768058193022004[25] = 0;
   out_6398768058193022004[26] = 0;
   out_6398768058193022004[27] = 0;
   out_6398768058193022004[28] = 0;
   out_6398768058193022004[29] = 0;
   out_6398768058193022004[30] = 0;
   out_6398768058193022004[31] = 0;
   out_6398768058193022004[32] = 0;
   out_6398768058193022004[33] = 1;
   out_6398768058193022004[34] = 0;
   out_6398768058193022004[35] = 0;
   out_6398768058193022004[36] = 0;
   out_6398768058193022004[37] = 0;
   out_6398768058193022004[38] = 0;
   out_6398768058193022004[39] = 0;
   out_6398768058193022004[40] = 0;
   out_6398768058193022004[41] = 0;
   out_6398768058193022004[42] = 0;
   out_6398768058193022004[43] = 0;
   out_6398768058193022004[44] = 0;
   out_6398768058193022004[45] = 0;
   out_6398768058193022004[46] = 0;
   out_6398768058193022004[47] = 0;
   out_6398768058193022004[48] = 0;
   out_6398768058193022004[49] = 0;
   out_6398768058193022004[50] = 0;
   out_6398768058193022004[51] = 0;
   out_6398768058193022004[52] = 0;
   out_6398768058193022004[53] = 0;
   out_6398768058193022004[54] = 0;
   out_6398768058193022004[55] = 0;
   out_6398768058193022004[56] = 1;
   out_6398768058193022004[57] = 0;
   out_6398768058193022004[58] = 0;
   out_6398768058193022004[59] = 0;
   out_6398768058193022004[60] = 0;
   out_6398768058193022004[61] = 0;
   out_6398768058193022004[62] = 0;
   out_6398768058193022004[63] = 0;
   out_6398768058193022004[64] = 0;
   out_6398768058193022004[65] = 0;
}
void h_10(double *state, double *unused, double *out_5076226494856352036) {
   out_5076226494856352036[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5076226494856352036[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5076226494856352036[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3492147269173791695) {
   out_3492147269173791695[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3492147269173791695[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3492147269173791695[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3492147269173791695[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3492147269173791695[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3492147269173791695[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3492147269173791695[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3492147269173791695[7] = 0;
   out_3492147269173791695[8] = 0;
   out_3492147269173791695[9] = 0;
   out_3492147269173791695[10] = 0;
   out_3492147269173791695[11] = 0;
   out_3492147269173791695[12] = 0;
   out_3492147269173791695[13] = 0;
   out_3492147269173791695[14] = 0;
   out_3492147269173791695[15] = 0;
   out_3492147269173791695[16] = 1;
   out_3492147269173791695[17] = 0;
   out_3492147269173791695[18] = 0;
   out_3492147269173791695[19] = 1;
   out_3492147269173791695[20] = 0;
   out_3492147269173791695[21] = 0;
   out_3492147269173791695[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3492147269173791695[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3492147269173791695[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3492147269173791695[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3492147269173791695[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3492147269173791695[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3492147269173791695[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3492147269173791695[29] = 0;
   out_3492147269173791695[30] = 0;
   out_3492147269173791695[31] = 0;
   out_3492147269173791695[32] = 0;
   out_3492147269173791695[33] = 0;
   out_3492147269173791695[34] = 0;
   out_3492147269173791695[35] = 0;
   out_3492147269173791695[36] = 0;
   out_3492147269173791695[37] = 0;
   out_3492147269173791695[38] = 0;
   out_3492147269173791695[39] = 1;
   out_3492147269173791695[40] = 0;
   out_3492147269173791695[41] = 0;
   out_3492147269173791695[42] = 1;
   out_3492147269173791695[43] = 0;
   out_3492147269173791695[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3492147269173791695[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3492147269173791695[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3492147269173791695[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3492147269173791695[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3492147269173791695[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3492147269173791695[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3492147269173791695[51] = 0;
   out_3492147269173791695[52] = 0;
   out_3492147269173791695[53] = 0;
   out_3492147269173791695[54] = 0;
   out_3492147269173791695[55] = 0;
   out_3492147269173791695[56] = 0;
   out_3492147269173791695[57] = 0;
   out_3492147269173791695[58] = 0;
   out_3492147269173791695[59] = 0;
   out_3492147269173791695[60] = 0;
   out_3492147269173791695[61] = 0;
   out_3492147269173791695[62] = 1;
   out_3492147269173791695[63] = 0;
   out_3492147269173791695[64] = 0;
   out_3492147269173791695[65] = 1;
}
void h_12(double *state, double *unused, double *out_7799849093775983163) {
   out_7799849093775983163[0] = state[0];
   out_7799849093775983163[1] = state[1];
   out_7799849093775983163[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1620501296790650854) {
   out_1620501296790650854[0] = 1;
   out_1620501296790650854[1] = 0;
   out_1620501296790650854[2] = 0;
   out_1620501296790650854[3] = 0;
   out_1620501296790650854[4] = 0;
   out_1620501296790650854[5] = 0;
   out_1620501296790650854[6] = 0;
   out_1620501296790650854[7] = 0;
   out_1620501296790650854[8] = 0;
   out_1620501296790650854[9] = 0;
   out_1620501296790650854[10] = 0;
   out_1620501296790650854[11] = 0;
   out_1620501296790650854[12] = 0;
   out_1620501296790650854[13] = 0;
   out_1620501296790650854[14] = 0;
   out_1620501296790650854[15] = 0;
   out_1620501296790650854[16] = 0;
   out_1620501296790650854[17] = 0;
   out_1620501296790650854[18] = 0;
   out_1620501296790650854[19] = 0;
   out_1620501296790650854[20] = 0;
   out_1620501296790650854[21] = 0;
   out_1620501296790650854[22] = 0;
   out_1620501296790650854[23] = 1;
   out_1620501296790650854[24] = 0;
   out_1620501296790650854[25] = 0;
   out_1620501296790650854[26] = 0;
   out_1620501296790650854[27] = 0;
   out_1620501296790650854[28] = 0;
   out_1620501296790650854[29] = 0;
   out_1620501296790650854[30] = 0;
   out_1620501296790650854[31] = 0;
   out_1620501296790650854[32] = 0;
   out_1620501296790650854[33] = 0;
   out_1620501296790650854[34] = 0;
   out_1620501296790650854[35] = 0;
   out_1620501296790650854[36] = 0;
   out_1620501296790650854[37] = 0;
   out_1620501296790650854[38] = 0;
   out_1620501296790650854[39] = 0;
   out_1620501296790650854[40] = 0;
   out_1620501296790650854[41] = 0;
   out_1620501296790650854[42] = 0;
   out_1620501296790650854[43] = 0;
   out_1620501296790650854[44] = 0;
   out_1620501296790650854[45] = 0;
   out_1620501296790650854[46] = 1;
   out_1620501296790650854[47] = 0;
   out_1620501296790650854[48] = 0;
   out_1620501296790650854[49] = 0;
   out_1620501296790650854[50] = 0;
   out_1620501296790650854[51] = 0;
   out_1620501296790650854[52] = 0;
   out_1620501296790650854[53] = 0;
   out_1620501296790650854[54] = 0;
   out_1620501296790650854[55] = 0;
   out_1620501296790650854[56] = 0;
   out_1620501296790650854[57] = 0;
   out_1620501296790650854[58] = 0;
   out_1620501296790650854[59] = 0;
   out_1620501296790650854[60] = 0;
   out_1620501296790650854[61] = 0;
   out_1620501296790650854[62] = 0;
   out_1620501296790650854[63] = 0;
   out_1620501296790650854[64] = 0;
   out_1620501296790650854[65] = 0;
}
void h_35(double *state, double *unused, double *out_1065356635111222550) {
   out_1065356635111222550[0] = state[7];
   out_1065356635111222550[1] = state[8];
   out_1065356635111222550[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3273295647450005273) {
   out_3273295647450005273[0] = 0;
   out_3273295647450005273[1] = 0;
   out_3273295647450005273[2] = 0;
   out_3273295647450005273[3] = 0;
   out_3273295647450005273[4] = 0;
   out_3273295647450005273[5] = 0;
   out_3273295647450005273[6] = 0;
   out_3273295647450005273[7] = 1;
   out_3273295647450005273[8] = 0;
   out_3273295647450005273[9] = 0;
   out_3273295647450005273[10] = 0;
   out_3273295647450005273[11] = 0;
   out_3273295647450005273[12] = 0;
   out_3273295647450005273[13] = 0;
   out_3273295647450005273[14] = 0;
   out_3273295647450005273[15] = 0;
   out_3273295647450005273[16] = 0;
   out_3273295647450005273[17] = 0;
   out_3273295647450005273[18] = 0;
   out_3273295647450005273[19] = 0;
   out_3273295647450005273[20] = 0;
   out_3273295647450005273[21] = 0;
   out_3273295647450005273[22] = 0;
   out_3273295647450005273[23] = 0;
   out_3273295647450005273[24] = 0;
   out_3273295647450005273[25] = 0;
   out_3273295647450005273[26] = 0;
   out_3273295647450005273[27] = 0;
   out_3273295647450005273[28] = 0;
   out_3273295647450005273[29] = 0;
   out_3273295647450005273[30] = 1;
   out_3273295647450005273[31] = 0;
   out_3273295647450005273[32] = 0;
   out_3273295647450005273[33] = 0;
   out_3273295647450005273[34] = 0;
   out_3273295647450005273[35] = 0;
   out_3273295647450005273[36] = 0;
   out_3273295647450005273[37] = 0;
   out_3273295647450005273[38] = 0;
   out_3273295647450005273[39] = 0;
   out_3273295647450005273[40] = 0;
   out_3273295647450005273[41] = 0;
   out_3273295647450005273[42] = 0;
   out_3273295647450005273[43] = 0;
   out_3273295647450005273[44] = 0;
   out_3273295647450005273[45] = 0;
   out_3273295647450005273[46] = 0;
   out_3273295647450005273[47] = 0;
   out_3273295647450005273[48] = 0;
   out_3273295647450005273[49] = 0;
   out_3273295647450005273[50] = 0;
   out_3273295647450005273[51] = 0;
   out_3273295647450005273[52] = 0;
   out_3273295647450005273[53] = 1;
   out_3273295647450005273[54] = 0;
   out_3273295647450005273[55] = 0;
   out_3273295647450005273[56] = 0;
   out_3273295647450005273[57] = 0;
   out_3273295647450005273[58] = 0;
   out_3273295647450005273[59] = 0;
   out_3273295647450005273[60] = 0;
   out_3273295647450005273[61] = 0;
   out_3273295647450005273[62] = 0;
   out_3273295647450005273[63] = 0;
   out_3273295647450005273[64] = 0;
   out_3273295647450005273[65] = 0;
}
void h_32(double *state, double *unused, double *out_8684744143550933566) {
   out_8684744143550933566[0] = state[3];
   out_8684744143550933566[1] = state[4];
   out_8684744143550933566[2] = state[5];
   out_8684744143550933566[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8258583922565429987) {
   out_8258583922565429987[0] = 0;
   out_8258583922565429987[1] = 0;
   out_8258583922565429987[2] = 0;
   out_8258583922565429987[3] = 1;
   out_8258583922565429987[4] = 0;
   out_8258583922565429987[5] = 0;
   out_8258583922565429987[6] = 0;
   out_8258583922565429987[7] = 0;
   out_8258583922565429987[8] = 0;
   out_8258583922565429987[9] = 0;
   out_8258583922565429987[10] = 0;
   out_8258583922565429987[11] = 0;
   out_8258583922565429987[12] = 0;
   out_8258583922565429987[13] = 0;
   out_8258583922565429987[14] = 0;
   out_8258583922565429987[15] = 0;
   out_8258583922565429987[16] = 0;
   out_8258583922565429987[17] = 0;
   out_8258583922565429987[18] = 0;
   out_8258583922565429987[19] = 0;
   out_8258583922565429987[20] = 0;
   out_8258583922565429987[21] = 0;
   out_8258583922565429987[22] = 0;
   out_8258583922565429987[23] = 0;
   out_8258583922565429987[24] = 0;
   out_8258583922565429987[25] = 0;
   out_8258583922565429987[26] = 1;
   out_8258583922565429987[27] = 0;
   out_8258583922565429987[28] = 0;
   out_8258583922565429987[29] = 0;
   out_8258583922565429987[30] = 0;
   out_8258583922565429987[31] = 0;
   out_8258583922565429987[32] = 0;
   out_8258583922565429987[33] = 0;
   out_8258583922565429987[34] = 0;
   out_8258583922565429987[35] = 0;
   out_8258583922565429987[36] = 0;
   out_8258583922565429987[37] = 0;
   out_8258583922565429987[38] = 0;
   out_8258583922565429987[39] = 0;
   out_8258583922565429987[40] = 0;
   out_8258583922565429987[41] = 0;
   out_8258583922565429987[42] = 0;
   out_8258583922565429987[43] = 0;
   out_8258583922565429987[44] = 0;
   out_8258583922565429987[45] = 0;
   out_8258583922565429987[46] = 0;
   out_8258583922565429987[47] = 0;
   out_8258583922565429987[48] = 0;
   out_8258583922565429987[49] = 1;
   out_8258583922565429987[50] = 0;
   out_8258583922565429987[51] = 0;
   out_8258583922565429987[52] = 0;
   out_8258583922565429987[53] = 0;
   out_8258583922565429987[54] = 0;
   out_8258583922565429987[55] = 0;
   out_8258583922565429987[56] = 0;
   out_8258583922565429987[57] = 0;
   out_8258583922565429987[58] = 0;
   out_8258583922565429987[59] = 0;
   out_8258583922565429987[60] = 0;
   out_8258583922565429987[61] = 0;
   out_8258583922565429987[62] = 0;
   out_8258583922565429987[63] = 0;
   out_8258583922565429987[64] = 0;
   out_8258583922565429987[65] = 0;
   out_8258583922565429987[66] = 0;
   out_8258583922565429987[67] = 0;
   out_8258583922565429987[68] = 0;
   out_8258583922565429987[69] = 0;
   out_8258583922565429987[70] = 0;
   out_8258583922565429987[71] = 0;
   out_8258583922565429987[72] = 1;
   out_8258583922565429987[73] = 0;
   out_8258583922565429987[74] = 0;
   out_8258583922565429987[75] = 0;
   out_8258583922565429987[76] = 0;
   out_8258583922565429987[77] = 0;
   out_8258583922565429987[78] = 0;
   out_8258583922565429987[79] = 0;
   out_8258583922565429987[80] = 0;
   out_8258583922565429987[81] = 0;
   out_8258583922565429987[82] = 0;
   out_8258583922565429987[83] = 0;
   out_8258583922565429987[84] = 0;
   out_8258583922565429987[85] = 0;
   out_8258583922565429987[86] = 0;
   out_8258583922565429987[87] = 0;
}
void h_13(double *state, double *unused, double *out_6150788468479529992) {
   out_6150788468479529992[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6150788468479529992[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6150788468479529992[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_624909247907915424) {
   out_624909247907915424[0] = 0;
   out_624909247907915424[1] = 0;
   out_624909247907915424[2] = 0;
   out_624909247907915424[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_624909247907915424[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_624909247907915424[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_624909247907915424[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_624909247907915424[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_624909247907915424[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_624909247907915424[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_624909247907915424[10] = 0;
   out_624909247907915424[11] = 0;
   out_624909247907915424[12] = 0;
   out_624909247907915424[13] = 0;
   out_624909247907915424[14] = 0;
   out_624909247907915424[15] = 0;
   out_624909247907915424[16] = 0;
   out_624909247907915424[17] = 0;
   out_624909247907915424[18] = 0;
   out_624909247907915424[19] = 0;
   out_624909247907915424[20] = 0;
   out_624909247907915424[21] = 0;
   out_624909247907915424[22] = 0;
   out_624909247907915424[23] = 0;
   out_624909247907915424[24] = 0;
   out_624909247907915424[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_624909247907915424[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_624909247907915424[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_624909247907915424[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_624909247907915424[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_624909247907915424[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_624909247907915424[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_624909247907915424[32] = 0;
   out_624909247907915424[33] = 0;
   out_624909247907915424[34] = 0;
   out_624909247907915424[35] = 0;
   out_624909247907915424[36] = 0;
   out_624909247907915424[37] = 0;
   out_624909247907915424[38] = 0;
   out_624909247907915424[39] = 0;
   out_624909247907915424[40] = 0;
   out_624909247907915424[41] = 0;
   out_624909247907915424[42] = 0;
   out_624909247907915424[43] = 0;
   out_624909247907915424[44] = 0;
   out_624909247907915424[45] = 0;
   out_624909247907915424[46] = 0;
   out_624909247907915424[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_624909247907915424[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_624909247907915424[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_624909247907915424[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_624909247907915424[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_624909247907915424[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_624909247907915424[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_624909247907915424[54] = 0;
   out_624909247907915424[55] = 0;
   out_624909247907915424[56] = 0;
   out_624909247907915424[57] = 0;
   out_624909247907915424[58] = 0;
   out_624909247907915424[59] = 0;
   out_624909247907915424[60] = 0;
   out_624909247907915424[61] = 0;
   out_624909247907915424[62] = 0;
   out_624909247907915424[63] = 0;
   out_624909247907915424[64] = 0;
   out_624909247907915424[65] = 0;
}
void h_14(double *state, double *unused, double *out_3520759080716796977) {
   out_3520759080716796977[0] = state[10];
   out_3520759080716796977[1] = state[11];
   out_3520759080716796977[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6398768058193022004) {
   out_6398768058193022004[0] = 0;
   out_6398768058193022004[1] = 0;
   out_6398768058193022004[2] = 0;
   out_6398768058193022004[3] = 0;
   out_6398768058193022004[4] = 0;
   out_6398768058193022004[5] = 0;
   out_6398768058193022004[6] = 0;
   out_6398768058193022004[7] = 0;
   out_6398768058193022004[8] = 0;
   out_6398768058193022004[9] = 0;
   out_6398768058193022004[10] = 1;
   out_6398768058193022004[11] = 0;
   out_6398768058193022004[12] = 0;
   out_6398768058193022004[13] = 0;
   out_6398768058193022004[14] = 0;
   out_6398768058193022004[15] = 0;
   out_6398768058193022004[16] = 0;
   out_6398768058193022004[17] = 0;
   out_6398768058193022004[18] = 0;
   out_6398768058193022004[19] = 0;
   out_6398768058193022004[20] = 0;
   out_6398768058193022004[21] = 0;
   out_6398768058193022004[22] = 0;
   out_6398768058193022004[23] = 0;
   out_6398768058193022004[24] = 0;
   out_6398768058193022004[25] = 0;
   out_6398768058193022004[26] = 0;
   out_6398768058193022004[27] = 0;
   out_6398768058193022004[28] = 0;
   out_6398768058193022004[29] = 0;
   out_6398768058193022004[30] = 0;
   out_6398768058193022004[31] = 0;
   out_6398768058193022004[32] = 0;
   out_6398768058193022004[33] = 1;
   out_6398768058193022004[34] = 0;
   out_6398768058193022004[35] = 0;
   out_6398768058193022004[36] = 0;
   out_6398768058193022004[37] = 0;
   out_6398768058193022004[38] = 0;
   out_6398768058193022004[39] = 0;
   out_6398768058193022004[40] = 0;
   out_6398768058193022004[41] = 0;
   out_6398768058193022004[42] = 0;
   out_6398768058193022004[43] = 0;
   out_6398768058193022004[44] = 0;
   out_6398768058193022004[45] = 0;
   out_6398768058193022004[46] = 0;
   out_6398768058193022004[47] = 0;
   out_6398768058193022004[48] = 0;
   out_6398768058193022004[49] = 0;
   out_6398768058193022004[50] = 0;
   out_6398768058193022004[51] = 0;
   out_6398768058193022004[52] = 0;
   out_6398768058193022004[53] = 0;
   out_6398768058193022004[54] = 0;
   out_6398768058193022004[55] = 0;
   out_6398768058193022004[56] = 1;
   out_6398768058193022004[57] = 0;
   out_6398768058193022004[58] = 0;
   out_6398768058193022004[59] = 0;
   out_6398768058193022004[60] = 0;
   out_6398768058193022004[61] = 0;
   out_6398768058193022004[62] = 0;
   out_6398768058193022004[63] = 0;
   out_6398768058193022004[64] = 0;
   out_6398768058193022004[65] = 0;
}
void h_33(double *state, double *unused, double *out_4404488338798221623) {
   out_4404488338798221623[0] = state[16];
   out_4404488338798221623[1] = state[17];
   out_4404488338798221623[2] = state[18];
}
void H_33(double *state, double *unused, double *out_122738642811147669) {
   out_122738642811147669[0] = 0;
   out_122738642811147669[1] = 0;
   out_122738642811147669[2] = 0;
   out_122738642811147669[3] = 0;
   out_122738642811147669[4] = 0;
   out_122738642811147669[5] = 0;
   out_122738642811147669[6] = 0;
   out_122738642811147669[7] = 0;
   out_122738642811147669[8] = 0;
   out_122738642811147669[9] = 0;
   out_122738642811147669[10] = 0;
   out_122738642811147669[11] = 0;
   out_122738642811147669[12] = 0;
   out_122738642811147669[13] = 0;
   out_122738642811147669[14] = 0;
   out_122738642811147669[15] = 0;
   out_122738642811147669[16] = 1;
   out_122738642811147669[17] = 0;
   out_122738642811147669[18] = 0;
   out_122738642811147669[19] = 0;
   out_122738642811147669[20] = 0;
   out_122738642811147669[21] = 0;
   out_122738642811147669[22] = 0;
   out_122738642811147669[23] = 0;
   out_122738642811147669[24] = 0;
   out_122738642811147669[25] = 0;
   out_122738642811147669[26] = 0;
   out_122738642811147669[27] = 0;
   out_122738642811147669[28] = 0;
   out_122738642811147669[29] = 0;
   out_122738642811147669[30] = 0;
   out_122738642811147669[31] = 0;
   out_122738642811147669[32] = 0;
   out_122738642811147669[33] = 0;
   out_122738642811147669[34] = 0;
   out_122738642811147669[35] = 0;
   out_122738642811147669[36] = 0;
   out_122738642811147669[37] = 0;
   out_122738642811147669[38] = 0;
   out_122738642811147669[39] = 1;
   out_122738642811147669[40] = 0;
   out_122738642811147669[41] = 0;
   out_122738642811147669[42] = 0;
   out_122738642811147669[43] = 0;
   out_122738642811147669[44] = 0;
   out_122738642811147669[45] = 0;
   out_122738642811147669[46] = 0;
   out_122738642811147669[47] = 0;
   out_122738642811147669[48] = 0;
   out_122738642811147669[49] = 0;
   out_122738642811147669[50] = 0;
   out_122738642811147669[51] = 0;
   out_122738642811147669[52] = 0;
   out_122738642811147669[53] = 0;
   out_122738642811147669[54] = 0;
   out_122738642811147669[55] = 0;
   out_122738642811147669[56] = 0;
   out_122738642811147669[57] = 0;
   out_122738642811147669[58] = 0;
   out_122738642811147669[59] = 0;
   out_122738642811147669[60] = 0;
   out_122738642811147669[61] = 0;
   out_122738642811147669[62] = 1;
   out_122738642811147669[63] = 0;
   out_122738642811147669[64] = 0;
   out_122738642811147669[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1858514917797787888) {
  H(in_vec, out_1858514917797787888);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4875484729766190714) {
  err_fun(nom_x, delta_x, out_4875484729766190714);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_179592295699275847) {
  inv_err_fun(nom_x, true_x, out_179592295699275847);
}
void live_H_mod_fun(double *state, double *out_2512967513516333080) {
  H_mod_fun(state, out_2512967513516333080);
}
void live_f_fun(double *state, double dt, double *out_8075543098903494570) {
  f_fun(state,  dt, out_8075543098903494570);
}
void live_F_fun(double *state, double dt, double *out_8357313174235544082) {
  F_fun(state,  dt, out_8357313174235544082);
}
void live_h_4(double *state, double *unused, double *out_7334055422967863267) {
  h_4(state, unused, out_7334055422967863267);
}
void live_H_4(double *state, double *unused, double *out_6639957704822612649) {
  H_4(state, unused, out_6639957704822612649);
}
void live_h_9(double *state, double *unused, double *out_3520759080716796977) {
  h_9(state, unused, out_3520759080716796977);
}
void live_H_9(double *state, double *unused, double *out_6398768058193022004) {
  H_9(state, unused, out_6398768058193022004);
}
void live_h_10(double *state, double *unused, double *out_5076226494856352036) {
  h_10(state, unused, out_5076226494856352036);
}
void live_H_10(double *state, double *unused, double *out_3492147269173791695) {
  H_10(state, unused, out_3492147269173791695);
}
void live_h_12(double *state, double *unused, double *out_7799849093775983163) {
  h_12(state, unused, out_7799849093775983163);
}
void live_H_12(double *state, double *unused, double *out_1620501296790650854) {
  H_12(state, unused, out_1620501296790650854);
}
void live_h_35(double *state, double *unused, double *out_1065356635111222550) {
  h_35(state, unused, out_1065356635111222550);
}
void live_H_35(double *state, double *unused, double *out_3273295647450005273) {
  H_35(state, unused, out_3273295647450005273);
}
void live_h_32(double *state, double *unused, double *out_8684744143550933566) {
  h_32(state, unused, out_8684744143550933566);
}
void live_H_32(double *state, double *unused, double *out_8258583922565429987) {
  H_32(state, unused, out_8258583922565429987);
}
void live_h_13(double *state, double *unused, double *out_6150788468479529992) {
  h_13(state, unused, out_6150788468479529992);
}
void live_H_13(double *state, double *unused, double *out_624909247907915424) {
  H_13(state, unused, out_624909247907915424);
}
void live_h_14(double *state, double *unused, double *out_3520759080716796977) {
  h_14(state, unused, out_3520759080716796977);
}
void live_H_14(double *state, double *unused, double *out_6398768058193022004) {
  H_14(state, unused, out_6398768058193022004);
}
void live_h_33(double *state, double *unused, double *out_4404488338798221623) {
  h_33(state, unused, out_4404488338798221623);
}
void live_H_33(double *state, double *unused, double *out_122738642811147669) {
  H_33(state, unused, out_122738642811147669);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
